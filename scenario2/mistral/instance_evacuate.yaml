---
version: '2.0'
instance_evacuate:
  type: direct
  input:
    - instance_id
  tasks:
    get_instance_status_before:
      action: nova.servers_find id=<% $.instance_id %>
      publish:
        instance_name: <% task(get_instance_status_before).result.name %>
        status_before: <% task(get_instance_status_before).result.status %>
        host_before: <% task(get_instance_status_before).result["OS-EXT-SRV-ATTR:host"] %>
      on-success: evacuate_instance
      on-error: get_instance_status_when_fail

    evacuate_instance:
       action: nova.servers_evacuate server=<% $.instance_id %>
       retry:
         delay: 10
         count: 10
       on-success: wait_for_instance_rebuild
       on-error: get_instance_status_when_fail

    wait_for_instance_rebuild:
      action: nova.servers_find id=<% $.instance_id %> status="REBUILD"
      retry:
        delay: 2
        count: 30
      on-complete: wait_instance_status_active

    wait_instance_status_active:
      action: nova.servers_find id=<% $.instance_id %> status="ACTIVE"
      retry:
        delay: 10
        count: 30
      publish:
        status_after: <% task(wait_instance_status_active).result.status %>
        host_after: <% task(wait_instance_status_active).result["OS-EXT-SRV-ATTR:host"] %>
      on-success: check_diffrent_host
      on-error: get_instance_status_when_fail

    check_diffrent_host:
      action: std.noop
      on-complete:
        - test_vm: <% $.status_before = $.status_after and $.host_before = $.host_after %>
        - send_fail_email_1: <% $.status_before != $.status_after or $.host_before = $.host_after %>
        
    test_vm:
      workflow: verify_server server=<% $.instance_id %>
      publish:
        instance_pass_test: <% task(check_vm_work).result.instance_work %>
      on-success: 
        - get_instance_status_when_success: <% task(check_vm_work).result.instance_work = true %>
        - send_fail_email_2: <% task(check_vm_work).result.instance_work = false %>
      on-error: get_instance_status_when_fail

    get_instance_status_when_fail:
      action: nova.servers_find id=<% $.instance_id %>
      publish:
        status_after: <% task(get_instance_status_when_fail).result.status %>
        host_after: <% task(get_instance_status_when_fail).result["OS-EXT-SRV-ATTR:host"] %>
      on-error: send_fail_email_3

    get_instance_status_when_success:
      action: nova.servers_find id=<% $.instance_id %>
      publish:
        status_after: <% task(get_instance_status_when_success).result.status %>
        host_after: <% task(get_instance_status_when_success).result["OS-EXT-SRV-ATTR:host"] %>
      on-error: send_fail_email_3
      on-success: send_success_email

    send_fail_email_1:
      description: fail caused evacuate error OR instance's host not change
      action: std.echo
      input:
        output: |
          Fail when evacuate instance : [ name: <% $.instance_name %> ; status_before: <% $.status_before %> ; host_before: <% $.host_before %> ].
          Instance after workflow: [ name: <% $.instance_name %> ; status_after: <% $.status_after %> ; host_after: <% $.host_after %> ] 
          Workflow id: <% execution().id %>

    send_fail_email_2:
      description: fail caused instance not pass the test, even it success evacuate 
      action: std.echo
      input:
        output: |
          Fail when evacuate instance : [ name: <% $.instance_name %> ; status_before: <% $.status_before %> ; host_before: <% $.host_before %> ].
          Instance after workflow: [ name: <% $.instance_name %> ; status_after: <% $.status_after %> ; host_after: <% $.host_after %> ]
          Instance pass test: false
          Workflow id: <% execution().id %> 

    send_fail_email_3:
      description: fail caused unknown reason
      action: std.echo
      input:
        output: |
          Something wrong when excute workflow evacuate instance
          Workflow id: <% execution().id %>
    

    send_success_email:
      action: std.echo
      input:
       output: |
          Success evacuate instance : [ name: <% $.instance_name %> ; status_before: <% $.status_before %> ; host_before: <% $.host_before %> ].
          Instance after workflow: [ name: <% $.instance_name %> ; status_before: <% $.status_after %> ; host_before: <% $.host_after %> ]
          Workflow id: <% execution().id %> 

#    send_error_email:
#      action: std.email
#        to_addrs: [admin@demo.com]
#        subject: ERROR evacuate vm
#        body: |
#          We try to evacuate vm <% $.instance_id> when host have prolem but fail
#          Please look at mistral workflow <% execution().id %> for more detail
#        from_addr: mistral@yopmail.com
#        smtp_server: smtp.google.com
#        smtp_password: SECRET
#
#    send_success_email:
#      action: std.email
#        to_addrs: [admin@demo.com]
#        subject: SUCCESS evacuate vm
#        body: |
#          We evacuate vm <% $.instance_id> when host have prolem.
#          Please look at mistral workflow <% execution().id %> for more detail
#        from_addr: mistral@yopmail.com
#        smtp_server: smtp.google.com
#        smtp_password: SECRET
